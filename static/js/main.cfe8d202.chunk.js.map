{"version":3,"sources":["config/muiTheme.js","config/jssConfig.js","pages/Home/UserRepo/index.js","pages/Home/UserRepo/styles.js","pages/Home/components/RightContainer/index.js","pages/Home/components/LeftContainer/index.js","pages/Home/components/LeftContainer/styles.js","utils/storage.js","pages/Home/index.js","consts/index.js","redux/actions/profile.js","consts/actionTypes.js","pages/Home/styles.js","pages/Login/index.js","redux/actions/login.js","pages/Login/styles.js","pages/FourOFour/index.js","components/PrivateRoute/index.js","routes/index.js","App.js","serviceWorker.js","redux/reducers/login.js","redux/reducers/profile.js","redux/reducers/index.js","redux/reducers/demoReducer.js","redux/api/index.js","redux/sagas/login.js","redux/sagas/profile.js","redux/sagas/index.js","redux/store/index.js","index.js"],"names":["createMuiTheme","palette","primary","amber","typography","h1","fontSize","fontWeight","generateClassName","createGenerateClassName","jss","create","jssPreset","insertionPoint","withStyles","cardContainer","padding","margin","maxWidth","repoFont","fontFamily","repoLink","textDecoration","repoTitle","repoDescription","repoCreatedDate","marginBottom","classes","description","name","html_url","created_at","license","language","onLogout","key","className","cx","moment","format","href","target","rel","onClick","RightContainer","repos","this","props","isEmpty","map","repo","renderRepos","Component","avatar","width","height","textFont","color","avatar_url","bio","blog","email","alt","src","saveData","keyName","keyValue","localStorage","setItem","getData","getItem","Home","handleLogoutClick","clear","window","location","reload","state","githubToken","setState","getProfileData","prevProps","prevState","githubData","getProfileRepos","reposUrl","get","prevReposUrl","githubUserRepos","container","homeContainer","item","xs","leftContainer","rightContainer","actions","payload","type","compose","connect","console","log","overflow","backgroundColor","display","alignItems","justifyContent","flexDirection","overflowY","Login","onSuccess","response","code","getGithubToken","onFailure","alert","to","card","variant","title","button","clientId","process","redirectUri","buttonText","minWidth","marginTop","login","FourOFour","PrivateRoute","component","rest","render","pathname","exact","path","App","store","theme","customTheme","routes","Boolean","hostname","match","initialState","rootReducer","combineReducers","demoReducer","action","demoData","error","profile","userRepos","axios","require","apiCall","url","data","headers","method","body","client_id","client_secret","call","loginResponse","put","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","configureStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cfe8d202.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\"\nimport amber from \"@material-ui/core/colors/blue\"\n\nexport default createMuiTheme({\n  palette: {\n    primary: amber\n  },\n  typography: {\n    h1: {\n      fontSize: 28,\n      fontWeight: 300\n    }\n  }\n})","import { create } from 'jss'\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles'\nconst generateClassName = createGenerateClassName();\nconst jss = create({\n  ...jssPreset(),\n  // We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n  insertionPoint: 'jss-insertion-point',\n})\n\nexport { generateClassName, jss }\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport cx from \"classnames\";\nimport moment from \"moment\";\n\nimport { styles } from \"./styles\";\n\nconst UserRepo = ({ classes, description, name, html_url, license, language, created_at, onLogout }) => (\n  <Card key={name} className={classes.cardContainer}>\n    <Typography className={cx(classes.repoFont, classes.repoTitle)}>{name}</Typography>\n    <Typography className={cx(classes.repoDescription, classes.repoFont)}>{description}</Typography>\n    <Typography className={cx(classes.repoFont, classes.repoCreatedDate)}>{moment(created_at).format(\"LL\")}</Typography>\n    <a href={html_url} target=\"_blank\" className={classes.repoLink} rel=\"noopener noreferrer\">\n      <IconButton onClick={onLogout}>\n        <Icon>link</Icon>\n      </IconButton>\n    </a>\n  </Card>\n);\n\nexport default withStyles(styles)(UserRepo);\n","export const styles = {\n  cardContainer: {\n    padding: 14,\n    margin: 14,\n    maxWidth: 900\n  },\n  repoFont: {\n    fontFamily: \"Montserrat, sans-serif\"\n  },\n  repoLink: {\n    textDecoration: \"none\"\n  },\n  repoTitle: {\n    fontSize: 18,\n    fontWeight: 500\n  },\n  repoDescription: {\n    fontSize: 16\n  },\n  repoCreatedDate: {\n    fontSize: 12,\n    marginBottom: 4\n  }\n};","import React, { Component } from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport UserRepo from \"../../UserRepo\";\n\nclass RightContainer extends Component {\n  renderRepos() {\n    const { repos } = this.props;\n    if (!isEmpty(repos)) {\n      return repos.map(repo => <UserRepo key={repo.name} {...repo}/>)\n    }\n  }\n  render() {\n    return(\n      <div>\n        {this.renderRepos()}\n      </div>\n    );\n  }\n}\n\nexport default RightContainer;","\nimport React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { styles } from \"./styles\";\n\nconst LeftContainer = ({\n  classes,\n  avatar_url,\n  bio,\n  blog,\n  email,\n  name,\n  onLogout\n}) => (\n    <div>\n      <Avatar alt={email} src={avatar_url} className={classes.avatar} />\n      <Typography className={classes.textFont}>{name}</Typography>\n      <Typography className={classes.textFont}>{email}</Typography>\n      <Typography className={classes.textFont}>{blog}</Typography>\n      <Typography className={classes.textFont}>{bio}</Typography>\n      <IconButton onClick={onLogout}>\n        <Icon>logout</Icon>\n      </IconButton>\n    </div>\n  );\n\nexport { LeftContainer };\n\nexport default withStyles(styles)(LeftContainer);","export const styles = {\n  avatar: {\n    width: 80,\n    height: \"auto\"\n  },\n  textFont: {\n    fontSize: 16,\n    color: \"#fff\"\n  }\n};","export const saveData = (keyName, keyValue) => {\n  localStorage.setItem(keyName, keyValue);\n}\n\nexport const getData = (keyName) => localStorage.getItem(keyName)\n\nexport const clearStorage = () => localStorage.clear()","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport get from 'lodash/get'\n\nimport { getProfileData, getProfileRepos } from '../../redux/actions/profile'\nimport { styles } from './styles'\nimport RightContainer from './components/RightContainer'\nimport LeftContainer from './components/LeftContainer'\nimport { getData, clearStorage } from '../../utils/storage'\nimport { GITHUB_TOKEN } from '../../consts'\n\nclass Home extends Component {\n\n  constructor() {\n    super()\n    this.state = { githubToken: null }\n  }\n\n  async componentDidMount() {\n    const githubToken = getData(GITHUB_TOKEN)\n    await this.setState({ githubToken })\n    this.props.getProfileData({ githubToken });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { githubData, getProfileRepos } = this.props\n    const reposUrl = get(githubData, 'repos_url', null)\n    const prevReposUrl = get(prevProps, 'githubData.repos_url', null)\n    if (reposUrl && (prevReposUrl !== reposUrl)) {\n      getProfileRepos({ reposUrl })\n    }\n  }\n\n  handleLogoutClick = () => {\n    clearStorage();\n    window.location.reload();\n  }\n\n  render() {\n    const { classes, githubData, githubUserRepos } = this.props;\n    return (\n      <Grid container className={classes.homeContainer}>\n        <Grid item xs={3} className={classes.leftContainer}>\n          <LeftContainer {...githubData} onLogout={this.handleLogoutClick} />\n        </Grid>\n        <Grid item xs={9} className={classes.rightContainer}>\n          <RightContainer repos={githubUserRepos} />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nconst actions = {\n  getProfileData,\n  getProfileRepos\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    // githubData: state.githubData\n    githubData: get(state, 'profile.githubData', null),\n    githubUserRepos: get(state, 'profile.userRepos', null)\n  }\n}\n\nexport { Home };\n\nexport default compose(\n  connect(mapStateToProps, actions),\n  withStyles(styles)\n)(Home)\n","export const GITHUB_TOKEN = 'GITHUB_TOKEN';","import { GET_PROFILE_GITHUB_DATA_START, GET_PROFILE_GITHUB_REPOS_START } from '../../consts/actionTypes'\n\nexport const getProfileData = payload => ({\n  type: GET_PROFILE_GITHUB_DATA_START,\n  payload\n})\n\nexport const getProfileRepos = payload => ({\n  type: GET_PROFILE_GITHUB_REPOS_START,\n  payload\n})","export const GET_DEMO_REQUEST = 'GET_DEMO_REQUEST';\nexport const GET_DEMO_SUCCESS = 'GET_DEMO_SUCCESS';\nexport const SEARCH_MEDIA_ERROR = 'SEARCH_MEDIA_ERROR';\n\nexport const GET_OAUTH_GITHUB_TOKEN_START = 'GET_OAUTH_GITHUB_TOKEN_START';\nexport const GET_OAUTH_GITHUB_TOKEN_SUCCESS = 'GET_OAUTH_GITHUB_TOKEN_SUCCESS';\nexport const GET_OAUTH_GITHUB_TOKEN_ERROR = 'GET_OAUTH_GITHUB_TOKEN_ERROR';\n\nexport const GET_PROFILE_GITHUB_DATA_START = 'GET_PROFILE_GITHUB_DATA_START';\nexport const GET_PROFILE_GITHUB_DATA_SUCCESS = 'GET_PROFILE_GITHUB_DATA_SUCCESS';\nexport const GET_PROFILE_GITHUB_DATA_ERROR = 'GET_PROFILE_GITHUB_DATA_ERROR';\n\nexport const GET_PROFILE_GITHUB_REPOS_START = 'GET_PROFILE_GITHUB_REPOS_START';\nexport const GET_PROFILE_GITHUB_REPOS_SUCCESS = 'GET_PROFILE_GITHUB_REPOS_SUCCESS';\nexport const GET_PROFILE_GITHUB_REPOS_ERROR = 'GET_PROFILE_GITHUB_REPOS_ERROR';","export const styles = {\n  homeContainer: {\n    height: \"100vh\",\n    overflow: \"hidden\"\n  },\n  leftContainer: {\n    backgroundColor: \"#546e7a\",\n    color: \"#fff\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  rightContainer: {\n    height: \"100%\",\n    overflowY: \"auto\"\n  }\n}","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport GitHubLogin from 'react-github-login';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\n\nimport { getGithubToken } from '../../redux/actions/login'\nimport { styles } from './styles'\n\nclass Login extends Component {\n  onSuccess = response => {\n    if (response && response.code) {\n      this.props.getGithubToken({code: response.code})\n    }\n  }\n\n  onFailure = response => {\n    alert(\"No ha sido exitoso, intenta más tarde.\");\n  }\n\n  render() {\n    const { classes, githubToken } = this.props;\n\n    if (githubToken) {\n      return <Redirect to=\"/home\" />\n    }\n\n    return (\n      <div className={classes.container}>\n        <Card className={classes.card}>\n          <Typography variant=\"h1\" className={classes.title}>Iniciar Sesion</Typography>\n          <GitHubLogin\n            className={classes.button}\n            clientId={process.env.REACT_APP_GITHUB_CLIENT_ID}\n            redirectUri={process.env.REACT_APP_GITHUB_CALLBACK_URL}\n            onSuccess={this.onSuccess}\n            onFailure={this.onFailure}\n            buttonText=\"Github Account\" />\n        </Card>\n      </div>\n    )\n  }\n}\n\n// mapDispatchToProps\n// actions is new alternative used\nconst actions = {\n  getGithubToken\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return ({\n  githubToken: state.login.githubToken\n})}\n\n// export default withStyles(styles)(Login);\n// usually only need connect, but how this already have a HoC (withStyles),\n// With Compose, can chain or merge multiple HoC to component\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, actions)\n)(Login);\n\nexport {Login};","import { GET_OAUTH_GITHUB_TOKEN_START } from '../../consts/actionTypes'\n// action creator\nexport const getGithubToken = payload => ({\n  // action\n  type: GET_OAUTH_GITHUB_TOKEN_START,\n  payload\n})","export const styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  card: {\n    width: '400px',\n    minWidth: '300px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    marginTop: 12,\n    fontSize: 18,\n    marginBottom: 4\n  }\n}","import React, { Component } from 'react';\n\nclass FourOFour extends Component {\n  render() {\n    return(<div>404</div>)\n  }\n}\n\nexport default FourOFour","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport { getData } from '../../utils/storage'\nimport { GITHUB_TOKEN } from '../../consts/index'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const githubToken = getData(GITHUB_TOKEN)\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        githubToken\n          ? (<Component {...props} />)\n          : <Redirect to={{ pathname: \"/\" }} />\n      }\n    />\n  )\n}\n\nexport default PrivateRoute;\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Login from '../pages/Login';\nimport FourOFour from '../pages/FourOFour';\nimport PrivateRoute from '../components/PrivateRoute';\n\nexport default (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <PrivateRoute path=\"/home\" component={Home} />\n      <Route component={FourOFour} />\n    </Switch>\n  </Router>\n)\n","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport JssProvider from 'react-jss/lib/JssProvider';\n\nimport customTheme from './config/muiTheme'\nimport { jss, generateClassName } from './config/jssConfig'\nimport routes from './routes'\nimport \"./styles/index.css\"\n\nconst App = ({ store }) => (\n\t<Provider store={store}>\n\t\t<JssProvider jss={jss} generateClassName={generateClassName}>\n\t\t\t<MuiThemeProvider theme={customTheme}>\n\t\t\t\t{routes}\n\t\t\t</MuiThemeProvider>\n\t\t</JssProvider>\n\t</Provider>\n);\n\nApp.propTypes = {\n\tstore: PropTypes.object.isRequired\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  GET_OAUTH_GITHUB_TOKEN_START,\n  GET_OAUTH_GITHUB_TOKEN_SUCCESS,\n  GET_OAUTH_GITHUB_TOKEN_ERROR\n} from '../../consts/actionTypes'\nimport { GITHUB_TOKEN } from '../../consts'\nimport get from 'lodash/get'\nimport { saveData } from '../../utils/storage'\n\nconst initialState = {}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_OAUTH_GITHUB_TOKEN_START:\n      return { ...state }\n      // break\n    case GET_OAUTH_GITHUB_TOKEN_SUCCESS:\n      // const githubToken = action.loginResponse.data.githubToken)\n      const githubToken = get(action, \"loginResponse.data.githubToken\")\n      saveData(GITHUB_TOKEN, githubToken)\n      return { ...state, githubToken: githubToken}\n      // break\n    case GET_OAUTH_GITHUB_TOKEN_ERROR:\n      return { ...state, error: true }\n      // break\n    default:\n      return { ...state }\n  }\n}\n","import get from 'lodash/get'\nimport {\n  GET_PROFILE_GITHUB_DATA_START,\n  GET_PROFILE_GITHUB_DATA_SUCCESS,\n  GET_PROFILE_GITHUB_DATA_ERROR,\n  GET_PROFILE_GITHUB_REPOS_START,\n  GET_PROFILE_GITHUB_REPOS_SUCCESS,\n  GET_PROFILE_GITHUB_REPOS_ERROR\n} from '../../consts/actionTypes'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE_GITHUB_DATA_START:\n      return { ...state, error: null, githubData: null }\n      // break\n    case GET_PROFILE_GITHUB_DATA_SUCCESS:\n      return { ...state, githubData: get(action, \"githubData.data\") }\n      // break\n    case GET_PROFILE_GITHUB_DATA_ERROR:\n      return { ...state, error: true }\n      // break\n    case GET_PROFILE_GITHUB_REPOS_START:\n      return { ...state, error: null }\n      // break\n    case GET_PROFILE_GITHUB_REPOS_SUCCESS:\n      return { ...state, userRepos: get(action, \"userRepos.data\", []) }\n      // break\n    case GET_PROFILE_GITHUB_REPOS_ERROR:\n      return { ...state, error: true }\n      // break\n    default:\n      return { ...state }\n  }\n}\n","import { combineReducers } from 'redux';\nimport demoReducer from './demoReducer';\nimport login from './login';\nimport profile from './profile';\n\nconst rootReducer = combineReducers({\n\tdemoReducer,\n\tlogin,\n\tprofile,\n});\n\nexport default rootReducer;\n","import * as types from '../../consts/actionTypes';\n\nexport default function(state = [], action) {\n\tswitch (action.type) {\n\t\tcase types.GET_DEMO_REQUEST:\n\t\t\treturn [...state];\n\t\tcase types.GET_DEMO_SUCCESS:\n\t\t\tif (action.demoData) {\n\t\t\t\treturn [...action, action.demoData];\n\t\t\t}\n\t\t\treturn [...state, action];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","const axios = require('axios');\n\nexport const getDemo = params => {\n\tconst URL = 'https://reactjsteachingproj.herokuapp.com/users';\n\n\treturn axios.get(URL).then(response => {\n\t\treturn response.data;\n\t});\n};\n\n\nexport const apiCall = (url, data, headers, method) =>\n\taxios({\n\t\tmethod,\n\t\turl,\n\t\tdata,\n\t\theaders\n\t})","import { put, call, takeLatest } from 'redux-saga/effects';\nimport {\n  GET_OAUTH_GITHUB_TOKEN_START,\n  GET_OAUTH_GITHUB_TOKEN_SUCCESS,\n  GET_OAUTH_GITHUB_TOKEN_ERROR\n} from '../../consts/actionTypes'\nimport { apiCall } from '../api'\n\n// Generator function\nexport function* getGithubToken({ payload }) {\n  try {\n    const body = {\n      client_id: process.env.REACT_APP_GITHUB_CLIENT_ID,\n      client_secret: process.env.REACT_APP_GITHUB_CLIENT_SECRET,\n      code: payload.code\n    }\n\n    // async call\n    const loginResponse = yield call(\n      apiCall,\n      `${process.env.REACT_APP_GITHUB_CODE_FOR_TOKEN}`,\n      body,\n      null,\n      'POST')\n\n    // yield to wait, and put() from sagas\n    yield put({ type: GET_OAUTH_GITHUB_TOKEN_SUCCESS, loginResponse })\n  } catch (error) {\n    yield put({ type: GET_OAUTH_GITHUB_TOKEN_ERROR, error })\n  }\n}\n\n// create the watcher\nexport default function* login() {\n  yield takeLatest(GET_OAUTH_GITHUB_TOKEN_START, getGithubToken)\n}","import { put, call, takeLatest } from 'redux-saga/effects';\nimport {\n  GET_PROFILE_GITHUB_DATA_START,\n  GET_PROFILE_GITHUB_DATA_SUCCESS,\n  GET_PROFILE_GITHUB_DATA_ERROR,\n  GET_PROFILE_GITHUB_REPOS_START,\n  GET_PROFILE_GITHUB_REPOS_SUCCESS,\n  GET_PROFILE_GITHUB_REPOS_ERROR\n} from '../../consts/actionTypes'\nimport { apiCall } from '../api'\n\n// Generator function\nexport function* getProfileData({ payload: { githubToken } }) {\n  try {\n    // async call\n    const githubData = yield call(\n      apiCall,\n      `${process.env.REACT_APP_GITHUB_USER_URL}${githubToken}`,\n      null,\n      null,\n      'GET')\n    // yield to wait, and put() from sagas\n    yield put({ type: GET_PROFILE_GITHUB_DATA_SUCCESS, githubData })\n  } catch (error) {\n    yield put({ type: GET_PROFILE_GITHUB_DATA_ERROR, error })\n  }\n}\n\n// Generator function\nexport function* getProfileRepos({ payload: { reposUrl } }) {\n  try {\n    // async call\n    const userRepos = yield call(\n      apiCall,\n      reposUrl,\n      null,\n      null,\n      'GET')\n    // yield to wait, and put() from sagas\n    yield put({ type: GET_PROFILE_GITHUB_REPOS_SUCCESS, userRepos })\n  } catch (error) {\n    yield put({ type: GET_PROFILE_GITHUB_REPOS_ERROR, error })\n  }\n}\n\n// create the watchers\nexport default function* login() {\n  yield takeLatest(GET_PROFILE_GITHUB_DATA_START, getProfileData)\n  yield takeLatest(GET_PROFILE_GITHUB_REPOS_START, getProfileRepos)\n}","import { all } from 'redux-saga/effects';\nimport login from './login';\nimport profile from './profile';\n\n\nexport default function* rootSaga() {\n\t// run all sagas (run watchers)\n\tyield all([\n\t\tlogin(), // watcher\n\t\tprofile() // watcher\n\t]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n\tconst sagaMiddleware = createSagaMiddleware();\n\treturn {\n\t\t...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\n\t\trunSaga: sagaMiddleware.run(rootSaga)\n\t};\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './redux/store';\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}